@model IEnumerable<Inventory.Models.Product>
@{
    ViewData["Title"] = "Product List";

    var categoryList = ViewData["CategoryList"] as IEnumerable<Inventory.Models.Category>;
    var categorySelectList = categoryList != null
           ? new SelectList(categoryList, "Id", "Name")
           : new SelectList(Enumerable.Empty<Category>(), "Id", "Name");
    var brandList = ViewData["BrandList"] as IEnumerable<Inventory.Models.Brand>;
    var brandSelectedList = brandList != null
    ? new SelectList(brandList, "Id", "Name")
    : new SelectList(Enumerable.Empty<Brand>(), "Id", "Name");
}
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Product List</h4>
            <h6>Manage your products</h6>
        </div>
        <div class="page-btn">
            <a asp-action="Create" asp-controller="Product" class="btn btn-added">
                <img src="~/assets/img/icons/plus.svg"
                     alt="img"
                     class="me-1" />Add New Product
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-top">
                <div class="search-set">
                    <div class="search-path">
                        <a class="btn btn-filter" id="filter_search">
                            <img src="~/assets/img/icons/filter.svg" alt="img" />
                            <span>
                                <img src="~/assets/img/icons/closes.svg" alt="img" />
                            </span>
                        </a>
                    </div>
                    <div class="search-input">
                        <a class="btn btn-searchset">
                            <img src="~/assets/img/icons/search-white.svg" alt="img" />
                        </a>
                    </div>
                </div>
                <div class="wordset">
                    <ul>
                        <li>
                            <a data-bs-toggle="tooltip" id="pdfButton"
                               data-bs-placement="top"
                               title="pdf">
                                <img src="~/assets/img/icons/pdf.svg" alt="img" />
                            </a>
                        </li>
                        <li>
                            <a data-bs-toggle="tooltip" id="excelButton"
                               data-bs-placement="top"
                               title="excel">
                                <img src="~/assets/img/icons/excel.svg" alt="img" />
                            </a>
                        </li>
                        <li>
                            <a data-bs-toggle="tooltip" id="mswordButton"
                               data-bs-placement="top"
                               title="print">
                                <img src="~/assets/img/icons/printer.svg" alt="img" />
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <form method="post" asp-controller="Product" asp-action="Index">
                <div class="card mb-0" id="filter_inputs">
                    <div class="card-body pb-0">
                        <div class="row">
                            <div class="col-lg-12 col-sm-12">
                                <div class="row">
                                    <div class="col-lg col-sm-6 col-12">
                                        <div class="form-group">                                   
                                            <select class="select" name="CategoryId" id="categorySelect" asp-items="categorySelectList" asp-for="@ViewData["CategoryId"]">
                                                <option value="" selected>Choose Category</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg col-sm-6 col-12">
                                        <div class="form-group">
                                            <select class="select" name="SubCategoryId" id="subcategorySelect" asp-for="@ViewData["SubCategoryId"]">
                                                <option value="" selected>Choose Sub Category</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg col-sm-6 col-12">
                                        <div class="form-group">
                                            <select class="select" name="BrandId" asp-for="@ViewData["BrandId"]" asp-items="brandSelectedList">
                                                <option value="" selected>Choose Brand</option>
                                            </select>
                                        </div>
                                    </div>                                   
                                    <div class="col-lg col-sm-6 col-12">
                                        <div class="form-group text-center">                                           
                                            <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                            <input type="number" min=0 max="9900" oninput="validity.valid||(value='0');" id="min_price" class="price-range-field" name="Min_Price" asp-for="@ViewData["Min_Price"]" />
                                            <input type="number" min=0 max="10000" oninput="validity.valid||(value='10000');" id="max_price" class="price-range-field" name="Max_Price" asp-for="@ViewData["Max_Price"]" />
                                        </div>
                                    </div>
                                    <div class="col-lg-1 col-sm-6 col-12">
                                        <div class="form-group">                                           
                                            <button type="submit" class="btn btn-filters ms-auto">
                                                <img src="~/assets/img/icons/search-whites.svg" alt="img" />
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            

            <div class="table-responsive">
                <table class="table" id="productdatanew">
                    <thead>
                        <tr>
                            <th>
                                <label class="checkboxs">
                                    <input type="checkbox" id="select-all" />
                                    <span class="checkmarks"></span>
                                </label>
                            </th>
                            <th>Product Name</th>
                            <th>SKU</th>
                            <th>Category</th>
                            <th>Brand</th>
                            <th>price</th>
                            <th>Unit</th>
                            <th>Qty</th>
                            <th>Created By</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var product in Model)
                        {
                            <tr data-id="@product.Id">
                                <td>
                                    <label class="checkboxs">
                                        <input type="checkbox" />
                                        <span class="checkmarks"></span>
                                    </label>
                                </td>
                                <td class="productimgname">
                                    <a href="javascript:void(0);" class="product-img">
                                        <img src="@product.Image"
                                             alt="product" />
                                    </a>
                                    <a href="javascript:void(0);">@product.Name</a>
                                </td>
                                <td>@product.Sku</td>
                                <td>@product.Category.Name</td>
                                <td>@product.Brand.Name</td>
                                <td>@product.Price.ToString("F2")</td>
                                <td>@product.Unit.ShortName</td>
                                <td>@product.Quantity</td>
                                <td>@product.CreatedByNavigation.Role.Role</td>
                                <td>
                                    <a class="me-3 view_product" data-id="@product.Id">
                                        <img src="~/assets/img/icons/eye.svg" alt="img" />
                                    </a>
                                    <a class="me-3" asp-action="Edit" asp-controller="Product" asp-route-id="@product.Id">
                                        <img src="~/assets/img/icons/edit.svg" alt="img" />
                                    </a>
                                    <a class="deleteproductdbtn" href="javascript:void(0);" data-id="@product.Id">
                                        <img src="~/assets/img/icons/delete.svg" alt="img" />
                                    </a>
                                </td>
                            </tr>
                        }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade " id="userModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Product Details</h1>
                @* <h4>Product Details</h4>
                <h6>Full details of a product</h6> *@
                <button type="button" class="fa fa-times" data-bs-dismiss="modal" aria-label="Close" style="color:black !important;"></button>
            </div>
            <form id="editProductForm">
                <div class="modal-body" id="productModalBody">
                </div>
                <div class="modal-footer" style="margin-right:10px;display:inline-block;padding:0; float:right;">
                    <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                    @* <button type="button" class="btn btn-primary">Send message</button> *@
                    <button type="submit" class="btn btn-sm btn-primary" id="submitid">Submit</button>
                </div>
            </form>          
        </div>
    </div>
</div>
@section Scripts {
    @{
                <partial name="_ValidationScriptsPartial" />
    }
    
    <style>
        .ui-slider-horizontal {
            height: .6em;
        }

        .ui-slider-horizontal {
            margin-bottom: 15px;
            /* width: 100%; */
            margin-left: 10px;
            margin-right: 10px;
        }

        .ui-widget-header {
            background: #ff9f43;
        }

        .price-range-field {
             width: 48%;
            /*min-width: 16%; */
            background-color: #f9f9f9;
            border: 1px solid #6e6666;
            color: black;
            font-family: myFont;
            font: normal 14px Arial, Helvetica, sans-serif;
            border-radius: 5px;
            height: 26px;
            padding: 5px;
        }

        .search-results-block {
            position: relative;
            display: block;
            clear: both;
        }

    </style>
    <script type="text/javascript">
        $(document).ready(function () {           
            var updateMessage = '@TempData["UpdateMessage"]';
            if (updateMessage) {
                showContent(updateMessage);
            }
            $("#pdfButton").on("click", function () {
                // $.ajax({
                //     url: "/Product/GenerateProductReport",
                //     method: "GET",
                //     dataType: "json",
                //     //responseType: 'arraybuffer', // Set the responseType to 'arraybuffer' to handle binary data
                //     success: function (result) {
                //         //var blob = new Blob([result], { type: "application/pdf" });
                //         var fileUrl = result.fileUrl;
                //         // Create a data URL for the Blob
                //         //var url = URL.createObjectURL(blob);
                //         window.open(fileUrl, "_blank");
                //         // Open the PDF in a new window
                //         //window.open(url, "_blank");
                //     },
                //     error: function (error) {
                //         alert(error.responseText)
                //     }
                // });
                ExportFile("pdf");
            });
            $("#excelButton").on("click", function () {
                ExportFile("vnd.ms-excel");
            });
            $("#mswordButton").on("click", function () {
                ExportFile("msword");
            });
            function ExportFile(fileType){
                $.ajax({
                    url: "/Product/GenerateProductReport",
                    method: "GET",
                    data: { fileType: fileType },
                    xhrFields: {
                        responseType: 'blob'  // Set the response type to blob to handle binary data
                    },
                    success: function (result) {
                        var blob = new Blob([result], { type: "application/" + fileType });
                        var url = URL.createObjectURL(blob);

                        if (fileType === "pdf") {
                            window.open(url, "_blank");  // Open the PDF in a new window
                        } else if (fileType === "vnd.ms-excel" || fileType === "msword") {
                            // Download the Excel file
                            // var link = document.createElement('a');
                            // link.href = url;
                            // //link.download = "ProductReport.xls";  // Set the default name for the download
                            // document.body.appendChild(link);
                            // link.click();
                            // document.body.removeChild(link);

                            var $link = $('<a></a>').attr({
                                href: url
                                //download: "ProductReport.xls"  // Set the default name for the download
                            }).appendTo('body');  // Add the link to the DOM

                            $link[0].click();  // Trigger the click event on the link
                            $link.remove();  // Remove the link from the DOM
                        }

                        //window.open(url, "_blank");  // Open the PDF in a new window
                    },
                    error: function (error) {
                        alert("Error generating File: " + error.responseText);
                    }
                });
            }
            var table = $('#productdatanew').DataTable({
                "bFilter": true,
                "sDom": 'fBtlpi',
                'pagingType': 'numbers',
                "ordering": true,
                "language": {
                    search: ' ',
                    sLengthMenu: '_MENU_',
                    searchPlaceholder: "Search...",
                    info: "_START_ - _END_ of _TOTAL_ items",
                },
                initComplete: function (settings, json) {
                    $('.dataTables_filter').appendTo('#tableSearch');
                    $('.dataTables_filter').appendTo('.search-input');
                },
            });
            $(".view_product").click(function () {
                //var allData = table.rows().data().toArray();
                var productId = $(this).data("id");
                $.ajax({
                    url: '/Product/GetProductDetails', // Adjust the controller action URL as needed
                    type: 'GET',
                    data: { id: productId },
                    success: function (result) {
                        $('#productModalBody').html(result); // Load the result into the modal body
                        // $("#userModal").on("shown.bs.modal", function () {
                        //     if ($('.product-slide').length > 0) {
                        //         $('.product-slide').owlCarousel({
                        //             items: 1,
                        //             margin: 30,
                        //             dots: false,
                        //             nav: true,
                        //             loop: false,
                        //             responsiveClass: true,
                        //             responsive: {
                        //                 0: {
                        //                     items: 1
                        //                 },
                        //                 800: {
                        //                     items: 1
                        //                 },
                        //                 1170: {
                        //                     items: 1
                        //                 }
                        //             }
                        //         });
                        //     }
                        // }); 
                        $("#userModal").modal("show"); // Show the modal
                    },
                    error: function () {
                        alert('Error loading product details');
                    }
                });
                // $.ajax({
                //     url: '/api/Users/updateData', // Your server-side update endpoint
                //     method: 'POST',
                //     contentType: 'application/json',
                //     data: JSON.stringify(allData),
                //     success: function (response) {
                //         showContent('Data updated successfully');
                //         //alert('Data updated successfully');
                //     },
                //     error: function (error) {
                //         showContentFail('Error updating data');
                //         //console.error('Error updating data:', error);
                //     }
                // });
                //$("#userModal").modal("show");
            });
            $('#editProductForm').submit(function (event) {
                event.preventDefault(); // Prevent the form from submitting the default way

                $.ajax({
                    url: '/Product/EditProduct',
                    type: 'POST',
                    data: $(this).serialize(), // Serialize the form data
                    success: function (response) {
                        if (response.success) {
                            showContent(response.message);
                            $('#userModal').modal('hide'); // Hide the modal
                            // Optionally, refresh the table or show a success message
                        } else {
                            $('#productModalBody').html(response); // Reload the form with validation errors
                        }
                    },
                    error: function () {
                        alert('Error saving product details');
                    }
                });
            });
            $(".deleteproductdbtn").on("click", function () {
                var productId = $(this).data("id");
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    type: "warning",
                    showCancelButton: !0,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!",
                    confirmButtonClass: "btn btn-primary",
                    cancelButtonClass: "btn btn-danger ml-1",
                    buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Delete", "Product")',
                            data: { id: productId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        type: "success",
                                        title: "Deleted!",
                                        text: "Your brand has been deleted.",
                                        confirmButtonClass: "btn btn-success"
                                    });
                                    // Remove the brand row from the table
                                    //$('tr[data-id="' + brandId + '"]').remove();
                                    // Remove the brand row from the table using DataTable API
                                    table.row($('tr[data-id="' + productId + '"]')).remove().draw();
                                } else {
                                    Swal.fire({
                                        type: "error",
                                        title: "Error!",
                                        text: response.message,
                                        confirmButtonClass: "btn btn-danger"
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    type: "error",
                                    title: "Error!",
                                    text: "An error occurred while processing your request.",
                                    confirmButtonClass: "btn btn-danger"
                                });
                            }
                        });
                    }
                });
            });           

            $("#min_price,#max_price").on('change', function () {

                var min_price_range = parseInt($("#min_price").val());

                var max_price_range = parseInt($("#max_price").val());

                if (min_price_range > max_price_range) {
                    $('#max_price').val(min_price_range);
                }

                $("#slider-range").slider({
                    values: [min_price_range, max_price_range]
                });

            });


            $("#min_price,#max_price").on("paste keyup", function () {

                var min_price_range = parseInt($("#min_price").val());

                var max_price_range = parseInt($("#max_price").val());

                if (min_price_range == max_price_range) {

                    max_price_range = min_price_range + 100;

                    $("#min_price").val(min_price_range);
                    $("#max_price").val(max_price_range);
                }

                $("#slider-range").slider({
                    values: [min_price_range, max_price_range]
                });

            });


            $(function () {
                $("#slider-range").slider({
                    range: true,
                    orientation: "horizontal",
                    min: 0,
                    max: 10000,
                    values: [0, 10000],
                    step: 100,

                    slide: function (event, ui) {
                        if (ui.values[0] == ui.values[1]) {
                            return false;
                        }

                        $("#min_price").val(ui.values[0]);
                        $("#max_price").val(ui.values[1]);
                    }
                });

                $("#min_price").val($("#slider-range").slider("values", 0));
                $("#max_price").val($("#slider-range").slider("values", 1));

            });


            var categoryId = $('#categorySelect').val();
            var selectedSubCategoryId = '@ViewData["SubCategoryId"]';

            if (categoryId) {
                populateSubcategories(categoryId, selectedSubCategoryId);
            }

            $('#categorySelect').change(function () {
                var categoryId = $(this).val();
                populateSubcategories(categoryId);               
            });

            function populateSubcategories(categoryId, selectedSubCategoryId = null) {
                if (categoryId) {
                    $.getJSON('@Url.Action("GetSubCategories", "Product")', { categoryId: categoryId }, function (data) {
                        var subcategorySelect = $('#subcategorySelect');
                        subcategorySelect.empty();
                        subcategorySelect.append('<option value="" selected disabled>Choose Sub Category</option>');
                        $.each(data, function (index, subcategory) {
                            var option = $('<option>', {
                                value: subcategory.id,
                                text: subcategory.name
                            });
                            if (subcategory.id == selectedSubCategoryId) {
                                option.attr('selected', 'selected');
                            }
                            subcategorySelect.append(option);
                        });
                    });
                } else {
                    $('#subcategorySelect').empty();
                    $('#subcategorySelect').append('<option value="" selected disabled>Choose Sub Category</option>');
                }
            }            

        });

    </script>
}